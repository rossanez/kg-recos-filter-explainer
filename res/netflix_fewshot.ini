[FILTER]
sparql = SELECT * WHERE { <subj> nfs:rated nfr:TV-MA . }

[USER]
predicates = ['http://www.netflix.com/nf-schema#title', 'http://www.netflix.com/nf-schema#rated']

[PROMPT]
instructions = You will receive some RDF triples. Your task is to generate a textual description based on the triples. The first triple conveys information that the entity represented by its subject is not a suitable recommendation. The subject on the first triple is not a suitable recommendation because it holds the property represented by the first triple predicate and the first triple object. The remaining triples are auxiliary triples to enrich the textual description. Please generate a textual description stating why the triple subject is not a suitable recommendation. Please return only the textual description. Avoid explanation. I will provide two examples. Complete the third.
fewshots = ["Triples: <http://www.netflix.com/nf-schema#s61>	nfs:rated	 nfr:TV-MA	 . <http://www.netflix.com/nf-schema#s61>	nfs:title	\"Naruto Shippuden: The Movie: The Lost Tower\"^^xsd:string	. <http://www.netflix.com/nf-schema#s61>	nfs:type	nfr:Movie	.\nDescription: The movie \"Naruto Shippuden: The Movie: The Lost Tower\" is not suitable because it is rated TV-MA.", "Triples: <http://www.netflix.com/nf-schema#s3>	nfs:rated	nfr:TV-MA	. <http://www.netflix.com/nf-schema#s3>	nfs:title	\"Ganglands\"^^xsd:string	. <http://www.netflix.com/nf-schema#s3>	nfs:type	nfr:TV_Show	.\nDescription: The TV show \"Ganglands\" is not suitable because it is rated TV-MA."]
input_predicates = ['http://www.netflix.com/nf-schema#rated', 'http://www.netflix.com/nf-schema#title', 'http://www.netflix.com/nf-schema#type']
