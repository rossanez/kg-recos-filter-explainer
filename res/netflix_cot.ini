[FILTER]
sparql = SELECT * WHERE { <subj> nfs:rated nfr:TV-MA . }

[PROMPT]
instructions = You will receive some RDF triples. Your task is to generate a textual description based on the triples by reasoning step by step. The first triple conveys information that the entity represented by its subject is not a suitable recommendation. The subject on the first triple is not a suitable recommendation because it holds the property represented by the first triple predicate and the first triple object. The remaining triples are auxiliary triples to enrich the textual description. The reasons should be output to a person that is non tech. Follow these four steps to reason through the task: 1. Identify the subject, predicate, and object of the first triple. 2. Determine why the subject is not suitable based on the predicate and object. 3. Extract auxiliary information from the remaining triples to enrich the description. 4. Combine the reasoning steps into a coherent textual description. Please generate the textual description and show the reasoning process step by step. In your output and reasoning, you should avoid technical terms, like triple, RDF. The output will be read by non technical stuff. I will provide two examples. Complete the third.
fewshots = ["Triples: <http://www.netflix.com/nf-schema#s61>	nfs:rated	 nfr:TV-MA	 . <http://www.netflix.com/nf-schema#s61>	nfs:title	\"Naruto Shippuden: The Movie: The Lost Tower\"^^xsd:string	. <http://www.netflix.com/nf-schema#s61>	nfs:type	nfr:Movie	.\nReasoning: \n1. The title is \"Naruto Shippuden: The Movie: The Lost Tower\" and its type is \"Movie\". \n2. Checking how the movie is \"rated\": the rating is \"TV-MA\". \n3. The title is not suitable because it is rated \"TV-MA\". \n4. Description: The movie \"Naruto Shippuden: The Movie: The Lost Tower\" is not suitable because it is rated TV-MA.", "Triples: <http://www.netflix.com/nf-schema#s3>	nfs:rated	nfr:TV-MA	. <http://www.netflix.com/nf-schema#s3>	nfs:title	\"Ganglands\"^^xsd:string	. <http://www.netflix.com/nf-schema#s3>	nfs:type	nfr:TV_Show	.\nReasoning: \n1. The title is \"Ganglands\" and its type is \"TV_Show\". \n2. Checking how the TV Show is \"nfs:rated\": the rating is \"TV-MA\". \n3. The title is not suitable because it is rated \"TV-MA\". \n4. Description: The TV show \"Ganglands\" is not suitable because it is rated TV-MA."]
input_predicates = ['http://www.netflix.com/nf-schema#rated', 'http://www.netflix.com/nf-schema#title', 'http://www.netflix.com/nf-schema#type']
